{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Layout/Layout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport Footer from \"../UI/Footer/Footer\";\nimport SideDrawer from \"../SideDrawer/SideDrawer\";\n\nvar Layout = function Layout(props) {\n  _s();\n\n  var _useState = useState(false),\n      sideDrawerIsVisible = _useState[0],\n      setSideDrawerIsVisible = _useState[1]; // const [delayFooter, setDelayFooter] = useState(false)\n\n\n  var sideDrawerToggleHandler = function sideDrawerToggleHandler() {\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  };\n\n  var sideDrawerClosedHandler = function sideDrawerClosedHandler() {\n    setSideDrawerIsVisible(false);\n  }; // useEffect(() => {\n  //     if (props.isTrackingPage) {\n  //         setDelayFooter(true)\n  //     }\n  // }, [delayFooter])\n  // const delayFooterHandler = () => {\n  //     setTimeout(() => {\n  //         let delayedFooter = footer\n  //         return delayedFooter\n  //     }, 5000);\n  //     return null\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      open: sideDrawerIsVisible,\n      drawerToggler: sideDrawerToggleHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SideDrawer, {\n      open: sideDrawerIsVisible,\n      close: sideDrawerClosedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this), props.isTrackingPage ? /*#__PURE__*/_jsxDEV(Footer, {\n      delay: 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }, _this) : /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 66\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Layout, \"8GgQbZByfoA3WJLRKjULXVSLrjM=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Layout/Layout.js"],"names":["useState","useEffect","Toolbar","Footer","SideDrawer","Layout","props","sideDrawerIsVisible","setSideDrawerIsVisible","sideDrawerToggleHandler","sideDrawerClosedHandler","children","isTrackingPage"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACgCN,QAAQ,CAAC,KAAD,CADxC;AAAA,MACfO,mBADe;AAAA,MACMC,sBADN,iBAEtB;;;AAGA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClCD,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GAFD;;AAIA,MAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClCF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH,GAFD,CATsB,CAatB;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAED,mBAAf;AAAoC,MAAA,aAAa,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,mBAAlB;AAAuC,MAAA,KAAK,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA,gBAAOJ,KAAK,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,aAHJ,EAKQL,KAAK,CAACM,cAAN,gBAAuB,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,aAAvB,gBAAiD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aALzD;AAAA,kBADJ;AAUH,CAtCD;;GAAMP,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport Toolbar from \"../Toolbar/Toolbar\"\nimport Footer from \"../UI/Footer/Footer\"\nimport SideDrawer from \"../SideDrawer/SideDrawer\"\n\nconst Layout = (props) => {\n    const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false)\n    // const [delayFooter, setDelayFooter] = useState(false)\n\n\n    const sideDrawerToggleHandler = () => {\n        setSideDrawerIsVisible(!sideDrawerIsVisible)\n    }\n\n    const sideDrawerClosedHandler = () => {\n        setSideDrawerIsVisible(false)\n    }\n\n    // useEffect(() => {\n    //     if (props.isTrackingPage) {\n    //         setDelayFooter(true)\n    //     }\n    // }, [delayFooter])\n\n\n    // const delayFooterHandler = () => {\n    //     setTimeout(() => {\n    //         let delayedFooter = footer\n    //         return delayedFooter\n    //     }, 5000);\n    //     return null\n    // }\n\n    return (\n        <>\n            <Toolbar open={sideDrawerIsVisible} drawerToggler={sideDrawerToggleHandler} />\n            <SideDrawer open={sideDrawerIsVisible} close={sideDrawerClosedHandler} />\n            <main>{props.children}</main>\n            {\n                props.isTrackingPage ? <Footer delay={5000} /> : <Footer />\n            }\n        </>\n    )\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}