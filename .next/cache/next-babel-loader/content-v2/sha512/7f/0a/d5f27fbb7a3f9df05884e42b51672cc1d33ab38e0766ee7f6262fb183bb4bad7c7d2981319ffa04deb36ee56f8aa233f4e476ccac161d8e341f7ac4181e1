{"ast":null,"code":"import * as Cesium from 'cesium';\nimport WindCore, { assign, defaultOptions, Field, formatData, isArray, removeDomNode } from 'wind-core';\nimport 'cesium/Build/Cesium/Widgets/widgets.css';\n\nclass CesiumWind {\n  constructor(data, options = {}) {\n    this.canvas = null;\n    this.wind = null;\n    this.field = null;\n    this.viewer = null;\n    this.options = assign({}, options);\n    this.pickWindOptions();\n    const canvas = document.createElement('canvas');\n    canvas.style.cssText = 'position:absolute; left:0; top:0;user-select:none;pointer-events: none;';\n    canvas.className = 'cesium-wind-j';\n    this.canvas = canvas;\n\n    if (data) {\n      this.setData(data);\n    }\n  }\n\n  addTo(viewer) {\n    this.viewer = viewer;\n    this.appendCanvas();\n    this.render(this.canvas);\n  }\n\n  remove() {\n    if (!this.viewer) {\n      return;\n    }\n\n    if (this.wind) {\n      this.wind.stop();\n    }\n\n    if (this.canvas) {\n      removeDomNode(this.canvas);\n    }\n\n    delete this.canvas;\n  }\n\n  removeLayer() {\n    this.remove();\n  }\n\n  setData(data) {\n    if (data && data.checkFields && data.checkFields()) {\n      this.field = data;\n    } else if (isArray(data)) {\n      this.field = formatData(data);\n    } else {\n      console.error('Illegal data');\n    }\n\n    if (this.viewer && this.canvas && this.field) {\n      this.wind.updateData(this.field);\n      this.appendCanvas();\n      this.render(this.canvas);\n    }\n\n    return this;\n  }\n\n  getData() {\n    return this.field;\n  }\n\n  getWindOptions() {\n    return this.options.windOptions || {};\n  }\n\n  pickWindOptions() {\n    Object.keys(defaultOptions).forEach(key => {\n      if (key in this.options) {\n        if (this.options.windOptions === undefined) {\n          this.options.windOptions = {};\n        }\n\n        this.options.windOptions[key] = this.options[key];\n      }\n    });\n  }\n\n  getContext() {\n    if (this.canvas === null) {\n      return;\n    }\n\n    return this.canvas.getContext('2d');\n  }\n\n  appendCanvas() {\n    if (!this.viewer || !this.canvas) {\n      return;\n    }\n\n    if (document.querySelector('.cesium-wind-j')) {\n      return;\n    }\n\n    this.adjustSize();\n    const cesiumWidget = this.viewer.canvas.parentNode;\n    cesiumWidget.appendChild(this.canvas);\n  }\n\n  adjustSize() {\n    const viewer = this.viewer;\n    const canvas = this.canvas;\n    const {\n      width,\n      height\n    } = viewer.canvas;\n    const devicePixelRatio = 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n  }\n\n  render(canvas) {\n    if (!this.getData() || !this.viewer) {\n      return this;\n    }\n\n    const opt = this.getWindOptions();\n\n    if (canvas && !this.wind) {\n      const data = this.getData();\n      const ctx = this.getContext();\n\n      if (ctx) {\n        this.wind = new WindCore(ctx, opt, data);\n        this.wind.project = this.project.bind(this);\n        this.wind.unproject = this.unproject.bind(this);\n        this.wind.intersectsCoordinate = this.intersectsCoordinate.bind(this);\n\n        this.wind.postrender = () => {};\n      }\n    }\n\n    if (this.wind) {\n      this.wind.prerender();\n      this.wind.render();\n    }\n\n    return this;\n  }\n\n  project(coordinate) {\n    const position = Cesium.Cartesian3.fromDegrees(coordinate[0], coordinate[1]);\n    const scene = this.viewer.scene;\n    const sceneCoor = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position);\n    return [sceneCoor.x, sceneCoor.y];\n  }\n\n  unproject(pixel) {\n    var _viewer$camera;\n\n    const viewer = this.viewer;\n    const pick = new Cesium.Cartesian2(pixel[0], pixel[1]);\n    const cartesian = viewer.scene.globe.pick((_viewer$camera = viewer.camera) === null || _viewer$camera === void 0 ? void 0 : _viewer$camera.getPickRay(pick), viewer.scene);\n\n    if (!cartesian) {\n      return null;\n    }\n\n    const ellipsoid = viewer.scene.globe.ellipsoid;\n    const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n    const lat = Cesium.Math.toDegrees(cartographic.latitude);\n    const lng = Cesium.Math.toDegrees(cartographic.longitude);\n    return [lng, lat];\n  }\n\n  intersectsCoordinate(coordinate) {\n    const ellipsoid = Cesium.Ellipsoid.WGS84;\n    const camera = this.viewer.camera;\n    const occluder = new Cesium.EllipsoidalOccluder(ellipsoid, camera.position);\n    const point = Cesium.Cartesian3.fromDegrees(coordinate[0], coordinate[1]);\n    return occluder.isPointVisible(point);\n  }\n\n}\n\nconst WindLayer = CesiumWind;\nexport { Field, WindLayer };\nexport default CesiumWind;","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Tracking/Wind.js"],"names":["Cesium","WindCore","assign","defaultOptions","Field","formatData","isArray","removeDomNode","CesiumWind","constructor","data","options","canvas","wind","field","viewer","pickWindOptions","document","createElement","style","cssText","className","setData","addTo","appendCanvas","render","remove","stop","removeLayer","checkFields","console","error","updateData","getData","getWindOptions","windOptions","Object","keys","forEach","key","undefined","getContext","querySelector","adjustSize","cesiumWidget","parentNode","appendChild","width","height","devicePixelRatio","opt","ctx","project","bind","unproject","intersectsCoordinate","postrender","prerender","coordinate","position","Cartesian3","fromDegrees","scene","sceneCoor","SceneTransforms","wgs84ToWindowCoordinates","x","y","pixel","pick","Cartesian2","cartesian","globe","camera","getPickRay","ellipsoid","cartographic","cartesianToCartographic","lat","Math","toDegrees","latitude","lng","longitude","Ellipsoid","WGS84","occluder","EllipsoidalOccluder","point","isPointVisible","WindLayer"],"mappings":"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","sourcesContent":["import * as Cesium from 'cesium';\nimport WindCore, { assign, defaultOptions, Field, formatData, isArray, removeDomNode, } from 'wind-core';\nimport 'cesium/Build/Cesium/Widgets/widgets.css';\n\nclass CesiumWind {\n  constructor(data, options = {}) {\n    this.canvas = null;\n    this.wind = null;\n    this.field = null;\n    this.viewer = null;\n    this.options = assign({}, options);\n    this.pickWindOptions();\n\n    const canvas = document.createElement('canvas');\n    canvas.style.cssText =\n      'position:absolute; left:0; top:0;user-select:none;pointer-events: none;';\n    canvas.className = 'cesium-wind-j';\n    this.canvas = canvas;\n\n    if (data) {\n      this.setData(data);\n    }\n  }\n\n  addTo(viewer) {\n    this.viewer = viewer;\n    this.appendCanvas();\n    this.render(this.canvas);\n  }\n\n  remove() {\n    if (!this.viewer) {\n      return;\n    }\n    if (this.wind) {\n      this.wind.stop();\n    }\n    if (this.canvas) {\n      removeDomNode(this.canvas);\n    }\n    delete this.canvas;\n  }\n\n  removeLayer() {\n    this.remove();\n  }\n\n  setData(data) {\n    if (data && data.checkFields && data.checkFields()) {\n      this.field = data;\n    } else if (isArray(data)) {\n      this.field = formatData(data);\n    } else {\n      console.error('Illegal data');\n    }\n\n    if (this.viewer && this.canvas && this.field) {\n      this.wind.updateData(this.field);\n      this.appendCanvas();\n      this.render(this.canvas);\n    }\n\n    return this;\n  }\n\n  getData() {\n    return this.field;\n  }\n\n  getWindOptions() {\n    return this.options.windOptions || {};\n  }\n\n  pickWindOptions() {\n    Object.keys(defaultOptions).forEach((key) => {\n      if (key in this.options) {\n        if (this.options.windOptions === undefined) {\n          this.options.windOptions = {};\n        }\n        this.options.windOptions[key] = this.options[key];\n      }\n    });\n  }\n\n  getContext() {\n    if (this.canvas === null) {\n      return;\n    }\n    return this.canvas.getContext('2d');\n  }\n\n  appendCanvas() {\n    if (!this.viewer || !this.canvas) {\n      return;\n    }\n    if (document.querySelector('.cesium-wind-j')) {\n      return;\n    }\n    this.adjustSize();\n    const cesiumWidget = this.viewer.canvas.parentNode;\n    cesiumWidget.appendChild(this.canvas);\n  }\n\n  adjustSize() {\n    const viewer = this.viewer;\n    const canvas = this.canvas;\n    const { width, height } = viewer.canvas;\n    const devicePixelRatio = 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n  }\n\n  render(canvas) {\n    if (!this.getData() || !this.viewer) {\n      return this;\n    }\n    const opt = this.getWindOptions();\n    if (canvas && !this.wind) {\n      const data = this.getData();\n\n      const ctx = this.getContext();\n\n      if (ctx) {\n        this.wind = new WindCore(ctx, opt, data);\n\n        this.wind.project = this.project.bind(this);\n        this.wind.unproject = this.unproject.bind(this);\n        this.wind.intersectsCoordinate = this.intersectsCoordinate.bind(this);\n        this.wind.postrender = () => {\n        };\n      }\n    }\n\n    if (this.wind) {\n      this.wind.prerender();\n      this.wind.render();\n    }\n\n    return this;\n  }\n\n  project(coordinate) {\n    const position = Cesium.Cartesian3.fromDegrees(\n      coordinate[0],\n      coordinate[1],\n    );\n    const scene = this.viewer.scene;\n    const sceneCoor = Cesium.SceneTransforms.wgs84ToWindowCoordinates(\n      scene,\n      position,\n    );\n    return [sceneCoor.x, sceneCoor.y];\n  }\n\n  unproject(pixel) {\n    const viewer = this.viewer;\n    const pick = new Cesium.Cartesian2(pixel[0], pixel[1]);\n    const cartesian = viewer.scene.globe.pick(\n      viewer.camera?.getPickRay(pick),\n      viewer.scene,\n    );\n\n    if (!cartesian) {\n      return null;\n    }\n\n    const ellipsoid = viewer.scene.globe.ellipsoid;\n    const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n    const lat = Cesium.Math.toDegrees(cartographic.latitude);\n    const lng = Cesium.Math.toDegrees(cartographic.longitude);\n    return [lng, lat];\n  }\n\n  intersectsCoordinate(coordinate) {\n    const ellipsoid = Cesium.Ellipsoid.WGS84;\n    const camera = this.viewer.camera;\n    const occluder = new Cesium.EllipsoidalOccluder(ellipsoid, camera.position);\n    const point = Cesium.Cartesian3.fromDegrees(coordinate[0], coordinate[1]);\n    return occluder.isPointVisible(point);\n  }\n}\n\nconst WindLayer = CesiumWind;\n\nexport { Field, WindLayer };\n\nexport default CesiumWind;"]},"metadata":{},"sourceType":"module"}