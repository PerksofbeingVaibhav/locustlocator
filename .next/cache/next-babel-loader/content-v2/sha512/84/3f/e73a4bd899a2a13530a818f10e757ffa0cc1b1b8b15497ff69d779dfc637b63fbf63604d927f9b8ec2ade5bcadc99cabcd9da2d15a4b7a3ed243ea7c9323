{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Layout/Layout.js\";\nimport { useState, useEffect } from \"react\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport Footer from \"../UI/Footer/Footer\";\nimport SideDrawer from \"../SideDrawer/SideDrawer\";\n\nconst Layout = props => {\n  const {\n    0: sideDrawerIsVisible,\n    1: setSideDrawerIsVisible\n  } = useState(false); // const [delayFooter, setDelayFooter] = useState(false)\n\n  const sideDrawerToggleHandler = () => {\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  };\n\n  const sideDrawerClosedHandler = () => {\n    setSideDrawerIsVisible(false);\n  }; // useEffect(() => {\n  //     if (props.isTrackingPage) {\n  //         setDelayFooter(true)\n  //     }\n  // }, [delayFooter])\n  // const delayFooterHandler = () => {\n  //     setTimeout(() => {\n  //         let delayedFooter = footer\n  //         return delayedFooter\n  //     }, 5000);\n  //     return null\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      open: sideDrawerIsVisible,\n      drawerToggler: sideDrawerToggleHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideDrawer, {\n      open: sideDrawerIsVisible,\n      close: sideDrawerClosedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Layout/Layout.js"],"names":["useState","useEffect","Toolbar","Footer","SideDrawer","Layout","props","sideDrawerIsVisible","setSideDrawerIsVisible","sideDrawerToggleHandler","sideDrawerClosedHandler","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAA,OAACC,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDR,QAAQ,CAAC,KAAD,CAA9D,CADsB,CAEtB;;AAGA,QAAMS,uBAAuB,GAAG,MAAM;AAClCD,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GAFD;;AAIA,QAAMG,uBAAuB,GAAG,MAAM;AAClCF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH,GAFD,CATsB,CAatB;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAED,mBAAf;AAAoC,MAAA,aAAa,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,mBAAlB;AAAuC,MAAA,KAAK,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAOJ,KAAK,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AASH,CArCD;;AAuCA,eAAeN,MAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport Toolbar from \"../Toolbar/Toolbar\"\nimport Footer from \"../UI/Footer/Footer\"\nimport SideDrawer from \"../SideDrawer/SideDrawer\"\n\nconst Layout = (props) => {\n    const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false)\n    // const [delayFooter, setDelayFooter] = useState(false)\n\n\n    const sideDrawerToggleHandler = () => {\n        setSideDrawerIsVisible(!sideDrawerIsVisible)\n    }\n\n    const sideDrawerClosedHandler = () => {\n        setSideDrawerIsVisible(false)\n    }\n\n    // useEffect(() => {\n    //     if (props.isTrackingPage) {\n    //         setDelayFooter(true)\n    //     }\n    // }, [delayFooter])\n\n\n    // const delayFooterHandler = () => {\n    //     setTimeout(() => {\n    //         let delayedFooter = footer\n    //         return delayedFooter\n    //     }, 5000);\n    //     return null\n    // }\n\n    return (\n        <>\n            <Toolbar open={sideDrawerIsVisible} drawerToggler={sideDrawerToggleHandler} />\n            <SideDrawer open={sideDrawerIsVisible} close={sideDrawerClosedHandler} />\n            <main>{props.children}</main>\n            <Footer />\n\n        </>\n    )\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}