{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/pages/tracking/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState, useRef } from \"react\";\nimport dynamic from 'next/dynamic';\nimport { NextSeo } from \"next-seo\";\nimport axios from \"axios\";\nimport PageLoader from \"../../components/LottieAnimations/pageLoader/PageLoader\";\nimport GaugeChart from 'react-gauge-chart';\nimport Footer from \"../../components/UI/Footer/Footer\";\nimport classes from \"./tracking.module.scss\";\nconst Tracking = dynamic(() => import('../../components/Tracking/Tracking'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/Tracking/Tracking')],\n    modules: ['../../components/Tracking/Tracking']\n  }\n});\n\nconst Tracker = () => {\n  const {\n    0: pageLoading,\n    1: setPageLoading\n  } = useState(false);\n  const {\n    0: longitude,\n    1: setLongitude\n  } = useState(0);\n  const {\n    0: latitude,\n    1: setLatitude\n  } = useState(0);\n  const {\n    0: predictedData,\n    1: setPredictedData\n  } = useState(null);\n  const {\n    0: displayButtonMessage,\n    1: setDisplayButtonMessage\n  } = useState(\"Predict\");\n  const {\n    0: displayMessage,\n    1: setDisplayMessage\n  } = useState(\"\");\n\n  const usePrevious = value => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    }, [value]);\n    return ref.current;\n  };\n\n  useEffect(() => {\n    setPageLoading(true);\n    setTimeout(() => {\n      setPageLoading(false);\n    }, 5000);\n  }, []);\n  const SEO = {\n    title: \"Locust Locator\",\n    description: \"track locusts here\",\n    openGraph: {\n      title: \"Locust Locator\",\n      description: \"track locusts here\"\n    }\n  };\n  const prevLat = usePrevious(latitude);\n  const prevLong = usePrevious(longitude);\n\n  const onFormSubmitHandler = event => {\n    event.preventDefault();\n    setDisplayButtonMessage(\"Predicting...\");\n    console.log(\"Longitude: \" + longitude);\n    console.log(\"Latitude: \" + latitude);\n    let lat = latitude;\n    let long = longitude;\n\n    if (lat < 0 || long < 0) {\n      setDisplayButtonMessage(\"Predict\");\n      setDisplayMessage(\"Invalid input\");\n      setPredictedData(0);\n    } else if (prevLat === lat && prevLong === long) {\n      setDisplayButtonMessage(\"Predict\");\n      console.log(\"lat and long matched with prev values\");\n    } else {\n      let data = `lat-${lat}-long-${long}`; // setLoading(true)\n\n      axios.post(`https://landcoverapi.azurewebsites.net/predict/${data}`).then(response => {\n        setDisplayButtonMessage(\"Done ✔️\");\n        setDisplayButtonMessage(\"Probability = \" + response.data.risk.toFixed(2)); // plotPredictedPoint(longitude, latitude)\n\n        setPredictedData(response.data.risk / 100);\n        console.log(response.data.risk / 100);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const onResetHandler = event => {\n    event.preventDefault();\n    setDisplayMessage(\"\");\n    setDisplayButtonMessage(\"Predict\");\n    setLongitude(0);\n    setLatitude(0); // setLoading(false)\n\n    setPredictedData(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NextSeo, _objectSpread({}, SEO), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tracking feature goes here!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.MetricsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Content,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Predict Probability of Locust Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.FormEntity,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"longitude: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"long\",\n              value: longitude,\n              onChange: e => setLongitude(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.FormEntity,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"latitude: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"lat\",\n              value: latitude,\n              onChange: e => setLatitude(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ButtonsContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onFormSubmitHandler,\n              children: displayButtonMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onResetHandler,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.DisplayMessage,\n            children: displayMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.GuageContainer,\n        children: /*#__PURE__*/_jsxDEV(GaugeChart, {\n          id: \"gauge-chart2\",\n          nrOfLevels: 420,\n          arcsLength: [0.2, 0.5, 0.2],\n          colors: ['#5BE12C', '#F5CD19', '#EA4228'],\n          percent: predictedData,\n          arcPadding: 0.02\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Tracker;","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/pages/tracking/index.js"],"names":["useEffect","useState","useRef","dynamic","NextSeo","axios","PageLoader","GaugeChart","Footer","classes","Tracking","ssr","Tracker","pageLoading","setPageLoading","longitude","setLongitude","latitude","setLatitude","predictedData","setPredictedData","displayButtonMessage","setDisplayButtonMessage","displayMessage","setDisplayMessage","usePrevious","value","ref","current","setTimeout","SEO","title","description","openGraph","prevLat","prevLong","onFormSubmitHandler","event","preventDefault","console","log","lat","long","data","post","then","response","risk","toFixed","catch","error","onResetHandler","MetricsContainer","Content","Form","FormEntity","e","target","ButtonsContainer","DisplayMessage","GuageContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport dynamic from 'next/dynamic'\nimport { NextSeo } from \"next-seo\"\nimport axios from \"axios\"\nimport PageLoader from \"../../components/LottieAnimations/pageLoader/PageLoader\"\nimport GaugeChart from 'react-gauge-chart'\nimport Footer from \"../../components/UI/Footer/Footer\"\nimport classes from \"./tracking.module.scss\"\n\nconst Tracking = dynamic(() => import('../../components/Tracking/Tracking'), {\n    ssr: false,\n});\n\n\nconst Tracker = () => {\n    const [pageLoading, setPageLoading] = useState(false)\n    const [longitude, setLongitude] = useState(0)\n    const [latitude, setLatitude] = useState(0)\n    const [predictedData, setPredictedData] = useState(null)\n    const [displayButtonMessage, setDisplayButtonMessage] = useState(\"Predict\")\n    const [displayMessage, setDisplayMessage] = useState(\"\")\n\n    const usePrevious = (value) => {\n        const ref = useRef();\n        useEffect(() => {\n            ref.current = value;\n        }, [value])\n        return ref.current;\n    }\n\n    useEffect(() => {\n        setPageLoading(true)\n        setTimeout(() => {\n            setPageLoading(false)\n        }, 5000);\n    }, [])\n\n    const SEO = {\n        title: \"Locust Locator\",\n        description: \"track locusts here\",\n\n        openGraph: {\n            title: \"Locust Locator\",\n            description: \"track locusts here\",\n        },\n    }\n\n    const prevLat = usePrevious(latitude);\n    const prevLong = usePrevious(longitude);\n\n    const onFormSubmitHandler = (event) => {\n        event.preventDefault();\n        setDisplayButtonMessage(\"Predicting...\")\n        console.log(\"Longitude: \" + longitude)\n        console.log(\"Latitude: \" + latitude)\n        let lat = latitude\n        let long = longitude\n\n        if (lat < 0 || long < 0) {\n            setDisplayButtonMessage(\"Predict\")\n            setDisplayMessage(\"Invalid input\")\n            setPredictedData(0)\n        }\n        else if (prevLat === lat && prevLong === long) {\n            setDisplayButtonMessage(\"Predict\")\n            console.log(\"lat and long matched with prev values\")\n        }\n        else {\n            let data = `lat-${lat}-long-${long}`\n            // setLoading(true)\n            axios.post(`https://landcoverapi.azurewebsites.net/predict/${data}`)\n                .then(response => {\n                    setDisplayButtonMessage(\"Done ✔️\")\n                    setDisplayButtonMessage(\"Probability = \" + response.data.risk.toFixed(2))\n                    // plotPredictedPoint(longitude, latitude)\n                    setPredictedData(response.data.risk / 100)\n                    console.log(response.data.risk / 100)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    }\n\n    const onResetHandler = (event) => {\n        event.preventDefault();\n        setDisplayMessage(\"\")\n        setDisplayButtonMessage(\"Predict\")\n        setLongitude(0)\n        setLatitude(0)\n        // setLoading(false)\n        setPredictedData(null)\n    }\n\n    return (\n        <>\n            <NextSeo {...SEO} />\n            {/* {pageLoading ?\n                (\n                    <div id=\"loading-overlay\">\n                        <div className=\"loader-content\">\n                            <PageLoader />\n                            <h1 style={{ fontSize: \"calc(8px + 0.8vw)\", color: \"rgb(228, 227, 227)\", textAlign: \"center\" }}>Disclaimer: To get the best gpu performance use the desktop app.</h1>\n                        </div>\n                    </div>\n                )\n                : null} */}\n            {/* <Tracking /> */}\n            <h1>Tracking feature goes here!!</h1>\n            <div className={classes.MetricsContainer}>\n                <div className={classes.Content}>\n                    <h1>Predict Probability of Locust Attack</h1>\n                    <div className={classes.Form}>\n                        <div className={classes.FormEntity}>\n                            <label htmlFor=\"longitude\">longitude: </label>\n                            <input type=\"text\" name=\"long\" value={longitude} onChange={(e) => setLongitude(e.target.value)} />\n                        </div>\n                        <div className={classes.FormEntity}>\n                            <label htmlFor=\"latitude\">latitude: </label>\n                            <input type=\"text\" name=\"lat\" value={latitude} onChange={(e) => setLatitude(e.target.value)} />\n                        </div>\n                        <div className={classes.ButtonsContainer}>\n                            <button onClick={onFormSubmitHandler}>{displayButtonMessage}</button>\n                            <button onClick={onResetHandler}>Reset</button>\n                        </div>\n                        <div className={classes.DisplayMessage}>{displayMessage}</div>\n                    </div>\n                </div>\n                <div className={classes.GuageContainer}>\n                    <GaugeChart id=\"gauge-chart2\"\n                        nrOfLevels={420}\n                        arcsLength={[0.2, 0.5, 0.2]}\n                        colors={['#5BE12C', '#F5CD19', '#EA4228']}\n                        percent={predictedData}\n                        arcPadding={0.02}\n                    />\n                </div>\n            </div>\n            <Footer />\n        </>\n    )\n}\n\nexport default Tracker"]},"metadata":{},"sourceType":"module"}