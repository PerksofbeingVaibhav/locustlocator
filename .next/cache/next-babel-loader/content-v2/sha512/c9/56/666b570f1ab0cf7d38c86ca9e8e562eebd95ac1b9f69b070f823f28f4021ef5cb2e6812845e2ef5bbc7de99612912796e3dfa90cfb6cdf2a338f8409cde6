{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Navigation/NavigationItem/NavigationItem.js\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./NavigationItem.module.scss\";\nimport { motion } from \"framer-motion\";\n\nconst refreshPage = router => {\n  if (router.pathname === \"/tracking\") {\n    // the app will refresh after navigating away from this link\n    window.location.reload(false);\n    window.location.href = \"/\";\n  }\n};\n\nconst variants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: {\n        stiffness: 1000,\n        velocity: -100\n      }\n    }\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: {\n        stiffness: 1000\n      }\n    }\n  }\n};\n\nconst NavigationItem = props => {\n  const router = useRouter();\n  const attachedClasses = [classes.NavigationItem];\n\n  let linkTag = /*#__PURE__*/_jsxDEV(Link, {\n    href: props.link,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => refreshPage(router),\n      className: router.pathname === props.link ? classes.active : \"\",\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 19\n  }, this);\n\n  if (props.special) {\n    attachedClasses.push(classes.SpecialText);\n\n    if (router.pathname === props.link) {\n      attachedClasses.push(classes.active);\n    }\n\n    linkTag = /*#__PURE__*/_jsxDEV(Link, {\n      as: props.link,\n      href: props.link,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => refreshPage(router),\n        className: attachedClasses.join(\" \"),\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(motion.li, {\n    variants: variants,\n    whileHover: {\n      scale: 1.1\n    },\n    whileTap: {\n      scale: 0.95\n    },\n    className: attachedClasses.join(\" \"),\n    children: linkTag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\nexport default NavigationItem;","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Navigation/NavigationItem/NavigationItem.js"],"names":["Link","useRouter","classes","motion","refreshPage","router","pathname","window","location","reload","href","variants","open","y","opacity","transition","stiffness","velocity","closed","NavigationItem","props","attachedClasses","linkTag","link","active","children","special","push","SpecialText","join","scale"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAE5B,MAAIA,MAAM,CAACC,QAAP,KAAoB,WAAxB,EAAqC;AACjC;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACAF,IAAAA,MAAM,CAACC,QAAP,CAAgBE,IAAhB,GAAuB,GAAvB;AACH;AACJ,CAPD;;AASA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,CAAC,EAAE,CADD;AAEFC,IAAAA,OAAO,EAAE,CAFP;AAGFC,IAAAA,UAAU,EAAE;AACRF,MAAAA,CAAC,EAAE;AAAEG,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,QAAQ,EAAE,CAAC;AAA9B;AADK;AAHV,GADO;AAQbC,EAAAA,MAAM,EAAE;AACJL,IAAAA,CAAC,EAAE,EADC;AAEJC,IAAAA,OAAO,EAAE,CAFL;AAGJC,IAAAA,UAAU,EAAE;AACRF,MAAAA,CAAC,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb;AADK;AAHR;AARK,CAAjB;;AAiBA,MAAMG,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMf,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMoB,eAAe,GAAG,CAACnB,OAAO,CAACiB,cAAT,CAAxB;;AACA,MAAIG,OAAO,gBAAG,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,KAAK,CAACG,IAAlB;AAAA,2BAAwB;AAAG,MAAA,OAAO,EAAE,MAAMnB,WAAW,CAACC,MAAD,CAA7B;AAAuC,MAAA,SAAS,EAAEA,MAAM,CAACC,QAAP,KAAoBc,KAAK,CAACG,IAA1B,GAAiCrB,OAAO,CAACsB,MAAzC,GAAkD,EAApG;AAAA,gBAAyGJ,KAAK,CAACK;AAA/G;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIL,KAAK,CAACM,OAAV,EAAmB;AACfL,IAAAA,eAAe,CAACM,IAAhB,CAAqBzB,OAAO,CAAC0B,WAA7B;;AACA,QAAIvB,MAAM,CAACC,QAAP,KAAoBc,KAAK,CAACG,IAA9B,EAAoC;AAChCF,MAAAA,eAAe,CAACM,IAAhB,CAAqBzB,OAAO,CAACsB,MAA7B;AACH;;AACDF,IAAAA,OAAO,gBAAG,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEF,KAAK,CAACG,IAAhB;AAAsB,MAAA,IAAI,EAAEH,KAAK,CAACG,IAAlC;AAAA,6BAAwC;AAAG,QAAA,OAAO,EAAE,MAAMnB,WAAW,CAACC,MAAD,CAA7B;AAAuC,QAAA,SAAS,EAAEgB,eAAe,CAACQ,IAAhB,CAAqB,GAArB,CAAlD;AAAA,kBAA8ET,KAAK,CAACK;AAApF;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AAED,sBACI,QAAC,MAAD,CAAQ,EAAR;AACI,IAAA,QAAQ,EAAEd,QADd;AAEI,IAAA,UAAU,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGI,IAAA,QAAQ,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHd;AAII,IAAA,SAAS,EAAET,eAAe,CAACQ,IAAhB,CAAqB,GAArB,CAJf;AAAA,cAKKP;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtBD;;AAwBA,eAAeH,cAAf","sourcesContent":["import Link from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport classes from \"./NavigationItem.module.scss\"\nimport { motion } from \"framer-motion\";\n\nconst refreshPage = (router) => {\n\n    if (router.pathname === \"/tracking\") {\n        // the app will refresh after navigating away from this link\n        window.location.reload(false)\n        window.location.href = \"/\";\n    }\n}\n\nconst variants = {\n    open: {\n        y: 0,\n        opacity: 1,\n        transition: {\n            y: { stiffness: 1000, velocity: -100 }\n        }\n    },\n    closed: {\n        y: 50,\n        opacity: 0,\n        transition: {\n            y: { stiffness: 1000 }\n        }\n    }\n};\n\nconst NavigationItem = (props) => {\n    const router = useRouter()\n    const attachedClasses = [classes.NavigationItem]\n    let linkTag = <Link href={props.link}><a onClick={() => refreshPage(router)} className={router.pathname === props.link ? classes.active : \"\"}>{props.children}</a></Link>\n\n    if (props.special) {\n        attachedClasses.push(classes.SpecialText)\n        if (router.pathname === props.link) {\n            attachedClasses.push(classes.active)\n        }\n        linkTag = <Link as={props.link} href={props.link}><a onClick={() => refreshPage(router)} className={attachedClasses.join(\" \")}>{props.children}</a></Link>\n    }\n\n    return (\n        <motion.li\n            variants={variants}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.95 }}\n            className={attachedClasses.join(\" \")}>\n            {linkTag}\n        </motion.li>\n    )\n}\n\nexport default NavigationItem"]},"metadata":{},"sourceType":"module"}