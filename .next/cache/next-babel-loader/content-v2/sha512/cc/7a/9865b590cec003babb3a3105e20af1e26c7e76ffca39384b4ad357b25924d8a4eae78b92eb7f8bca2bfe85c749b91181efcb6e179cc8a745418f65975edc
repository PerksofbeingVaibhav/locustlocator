{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Tracking/Tracking.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport axios from \"axios\";\nimport Footer from \"../../components/UI/Footer/Footer\";\nimport * as Cesium from 'cesium';\nimport CesiumWind from \"./Wind\"; // fetching locust locations\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = [];\n            _context.next = 3;\n            return axios.get(\"https://services5.arcgis.com/sjP4Ugu5s0dZWLjd/arcgis/rest/services/Swarms_Public/FeatureServer/0/query?where=STARTDATE%20%3E%3D%20TIMESTAMP%20%272021-01-01%2000%3A00%3A00%27%20AND%20STARTDATE%20%3C%3D%20TIMESTAMP%20%272021-04-04%2000%3A00%3A00%27&outFields=STARTDATE,LOCNAME,COUNTRYID,LOCPRESENT&outSR=4326&f=json\").then(function (response) {\n              response.data.features.map(function (pos) {\n                console.log(pos);\n                data.push({\n                  longitude: pos.geometry.x,\n                  latitude: pos.geometry.y\n                });\n              });\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar usePrevious = function usePrevious(value) {\n  _s();\n\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  console.log(value);\n  var ref = useRef(); // Store current value in ref\n\n  useEffect(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n};\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nvar Tracking = function Tracking() {\n  _s2();\n\n  var _useState = useState(null),\n      predictedData = _useState[0],\n      setPredictedData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      displayMessage = _useState2[0],\n      setDisplayMessage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      longitude = _useState3[0],\n      setLongitude = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      latitude = _useState4[0],\n      setLatitude = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var init = function init(locationData) {\n    // default view over India\n    var west = 68.0;\n    var south = 7.0;\n    var east = 89.0;\n    var north = 35.0;\n    var indiaPosition = Cesium.Rectangle.fromDegrees(west, south, east, north);\n    Cesium.Camera.DEFAULT_VIEW_FACTOR = 2;\n    Cesium.Camera.DEFAULT_VIEW_RECTANGLE = indiaPosition;\n    var imagery = Cesium.createDefaultImageryProviderViewModels(); // initialize viewer\n\n    var viewer = new Cesium.Viewer(\"cesium\", {\n      scene3DOnly: false,\n      selectionIndicator: true,\n      imageryProviderViewModels: imagery,\n      selectedImageryProviderViewModel: imagery[1],\n      animation: false,\n      timeline: false // automaticallyTrackDataSourceClocks: false\n\n    });\n    var scene = viewer.scene;\n    scene.skyBox.destroy();\n    scene.skyBox = undefined; // viewer.imageryLayers.addImageryProvider(provider);\n    // enabling lighting effects due to sun\n    // adding sentinel 2a, meteo 10 and spot 6 satellite realtime visualization\n\n    viewer.dataSources.removeAll();\n    var dataSrc = Cesium.CzmlDataSource.load(\"sat.czml\");\n    viewer.dataSources.add(dataSrc); // var editHandler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n    // editHandler.setInputAction(function (e) {\n    //   var shapeEditMenu = document.getElementById(\"toolbar\");\n    //   shapeEditMenu.textContent = 'Testing';\n    //   shapeEditMenu.style.display = \"block\";\n    //   shapeEditMenu.style.left = e.position.x + 'px';\n    //   shapeEditMenu.style.top = e.position.y + 'px';\n    //   shapeEditMenu.style.background = 'rgba(42, 42, 42, 0.8)';\n    //   shapeEditMenu.style.border = '1px solid #888';\n    // }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n    // editHandler.setInputAction(function (e) {\n    //   var shapeEditMenu = document.getElementById(\"toolbar\");\n    //   shapeEditMenu.style.display = \"none\";\n    // }, Cesium.ScreenSpaceEventType.LEFT_DOWN);\n    // adding predicted point\n    // if (prediction) {\n    //   viewer.entities.add({\n    //     position: Cesium.Cartesian3.fromDegrees(parseInt(longitude), parseInt(latitude)),\n    //     point: {\n    //       pixelSize: 30,\n    //       color: Cesium.Color.CRIMSON.withAlpha(0.4),\n    //     },\n    //   });\n    // }\n    // populating locust locations on globe\n\n    var billboards = viewer.scene.primitives.add(new Cesium.BillboardCollection());\n    {\n      locationData.map(function (coords) {\n        billboards.add({\n          position: Cesium.Cartesian3.fromDegrees(coords.longitude, coords.latitude),\n          image: '/Assets/Images/locust.png'\n        });\n      });\n    } // adding position marker\n\n    var entity = viewer.entities.add({\n      name: \"location\",\n      label: {\n        show: false,\n        showBackground: true,\n        font: \"14px monospace\",\n        style: Cesium.LabelStyle.FILL_AND_OUTLINE,\n        horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n        verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\n        pixelOffset: new Cesium.Cartesian2(0, -9)\n      }\n    }); // showing position popup on mouse move\n\n    viewer.canvas.addEventListener('mousemove', function (e) {\n      var mousePosition = new Cesium.Cartesian2(e.clientX, e.clientY);\n      var ellipsoid = viewer.scene.globe.ellipsoid;\n      var cartesian = viewer.camera.pickEllipsoid(mousePosition, ellipsoid);\n\n      if (cartesian) {\n        var cartographic = ellipsoid.cartesianToCartographic(cartesian);\n        var longitudeString = Cesium.Math.toDegrees(cartographic.longitude).toFixed(2);\n        var latitudeString = Cesium.Math.toDegrees(cartographic.latitude).toFixed(2);\n        entity.position = cartesian;\n        entity.label.show = true;\n        entity.label.text = \"Lon: \" + (\"   \" + longitudeString).slice(-7) + \"\\xB0\" + \"\\nLat: \" + (\"   \" + latitudeString).slice(-7) + \"\\xB0\";\n      } else {\n        entity.label.show = false;\n      }\n    }, false); // Visualizing wind on the globe\n\n    var windOptions = {\n      colorScale: ['rgb(36,104, 180)', 'rgb(60,157, 194)', 'rgb(128,205,193 )', 'rgb(151,218,168 )', 'rgb(198,231,181)', 'rgb(238,247,217)', 'rgb(255,238,159)', 'rgb(252,217,125)', 'rgb(255,182,100)', 'rgb(252,150,75)', 'rgb(250,112,52)', 'rgb(245,64,32)', 'rgb(237,45,28)', 'rgb(220,24,32)', 'rgb(180,0,35)'],\n      frameRate: 16,\n      maxAge: 60,\n      globalAlpha: 0.9,\n      velocityScale: 1 / 30,\n      paths: 2000\n    };\n    fetch('https://qjvic.github.io/cesium-wind/examples/wind.json').then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      var windLayer = new CesiumWind(res, {\n        windOptions: windOptions\n      });\n      windLayer.addTo(viewer);\n    });\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var locationData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchData();\n\n          case 2:\n            locationData = _context2.sent;\n            // const prediction = await predictedData\n            init(locationData);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), []);\n  var prevLat = usePrevious(latitude);\n  var prevLong = usePrevious(longitude); // const prevPredictedData = usePrevious(predictedData);\n\n  var onFormSubmitHandler = function onFormSubmitHandler(event) {\n    event.preventDefault();\n    console.log(\"Longitude: \" + longitude);\n    console.log(\"Latitude: \" + latitude);\n    var lat = latitude;\n    var _long = longitude;\n\n    if (lat === \"\" && _long === \"\") {\n      setPredictedData({\n        risk: NaN\n      });\n    } else if (prevLat === lat && prevLong === _long) {\n      console.log(\"lat and long matched with prev values\");\n    } else {\n      var data = \"lat-\".concat(lat, \"-long-\").concat(_long);\n      setLoading(true);\n      axios.post(\"https://landcoverapi.azurewebsites.net/predict/\".concat(data)).then(function (response) {\n        setLoading(false);\n        setDisplayMessage(\"Predicted Probability = \");\n        setPredictedData(response.data); // plotPredictedPoint(longitude, latitude)\n      });\n    }\n  };\n\n  var onResetHandler = function onResetHandler(event) {\n    event.preventDefault();\n    setDisplayMessage(\"\");\n    setLongitude(\"\");\n    setLatitude(\"\");\n    setLoading(false);\n    setPredictedData(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cesium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"location-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicting Probability of Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"longitude\",\n        children: \"longitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"long\",\n        value: longitude,\n        onChange: function onChange(e) {\n          return setLongitude(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"latitude\",\n        children: \"latitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lat\",\n        value: latitude,\n        onChange: function onChange(e) {\n          return setLatitude(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFormSubmitHandler,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onResetHandler,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, _this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 20\n      }, _this) : null, predictedData ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [displayMessage, \" \", predictedData.risk.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 26\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(Tracking, \"XNS3d4fp3Kn/kqZiCrswJjW5mYY=\", false, function () {\n  return [usePrevious, usePrevious];\n});\n\n_c = Tracking;\nexport default Tracking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracking\");","map":{"version":3,"sources":["/Users/jappanjeetsingh/Desktop/web/projects/LLAM/LLAM-V2/LLAM/components/Tracking/Tracking.js"],"names":["useEffect","useState","useRef","axios","Footer","Cesium","CesiumWind","fetchData","data","get","then","response","features","map","pos","console","log","push","longitude","geometry","x","latitude","y","usePrevious","value","ref","current","Tracking","predictedData","setPredictedData","displayMessage","setDisplayMessage","setLongitude","setLatitude","loading","setLoading","init","locationData","west","south","east","north","indiaPosition","Rectangle","fromDegrees","Camera","DEFAULT_VIEW_FACTOR","DEFAULT_VIEW_RECTANGLE","imagery","createDefaultImageryProviderViewModels","viewer","Viewer","scene3DOnly","selectionIndicator","imageryProviderViewModels","selectedImageryProviderViewModel","animation","timeline","scene","skyBox","destroy","undefined","dataSources","removeAll","dataSrc","CzmlDataSource","load","add","billboards","primitives","BillboardCollection","coords","position","Cartesian3","image","entity","entities","name","label","show","showBackground","font","style","LabelStyle","FILL_AND_OUTLINE","horizontalOrigin","HorizontalOrigin","LEFT","verticalOrigin","VerticalOrigin","BOTTOM","pixelOffset","Cartesian2","canvas","addEventListener","e","mousePosition","clientX","clientY","ellipsoid","globe","cartesian","camera","pickEllipsoid","cartographic","cartesianToCartographic","longitudeString","Math","toDegrees","toFixed","latitudeString","text","slice","windOptions","colorScale","frameRate","maxAge","globalAlpha","velocityScale","paths","fetch","res","json","windLayer","addTo","prevLat","prevLong","onFormSubmitHandler","event","preventDefault","lat","long","risk","NaN","post","onResetHandler","target"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport axios from \"axios\"\nimport Footer from \"../../components/UI/Footer/Footer\"\nimport * as Cesium from 'cesium';\nimport CesiumWind from \"./Wind\";\n\n// fetching locust locations\nconst fetchData = async () => {\n  let data = []\n  await axios.get(\"https://services5.arcgis.com/sjP4Ugu5s0dZWLjd/arcgis/rest/services/Swarms_Public/FeatureServer/0/query?where=STARTDATE%20%3E%3D%20TIMESTAMP%20%272021-01-01%2000%3A00%3A00%27%20AND%20STARTDATE%20%3C%3D%20TIMESTAMP%20%272021-04-04%2000%3A00%3A00%27&outFields=STARTDATE,LOCNAME,COUNTRYID,LOCPRESENT&outSR=4326&f=json\")\n    .then(response => {\n      response.data.features.map(pos => {\n        console.log(pos)\n        data.push({\n          longitude: pos.geometry.x,\n          latitude: pos.geometry.y\n        })\n      })\n    })\n  return data\n}\n\nconst usePrevious = (value) => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  console.log(value)\n  const ref = useRef();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n\n\nconst Tracking = () => {\n\n  const [predictedData, setPredictedData] = useState(null)\n  const [displayMessage, setDisplayMessage] = useState(\"\")\n  const [longitude, setLongitude] = useState(\"\")\n  const [latitude, setLatitude] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const init = (locationData) => {\n    // default view over India\n    var west = 68.0;\n    var south = 7.0;\n    var east = 89.0;\n    var north = 35.0;\n\n    var indiaPosition = Cesium.Rectangle.fromDegrees(west, south, east, north);\n\n    Cesium.Camera.DEFAULT_VIEW_FACTOR = 2;\n    Cesium.Camera.DEFAULT_VIEW_RECTANGLE = indiaPosition;\n\n    var imagery = Cesium.createDefaultImageryProviderViewModels();\n\n    // initialize viewer\n    const viewer = new Cesium.Viewer(\"cesium\", {\n      scene3DOnly: false,\n      selectionIndicator: true,\n      imageryProviderViewModels: imagery,\n      selectedImageryProviderViewModel: imagery[1],\n      animation: false,\n      timeline: false,\n      // automaticallyTrackDataSourceClocks: false\n    });\n    var scene = viewer.scene;\n    scene.skyBox.destroy();\n\n    scene.skyBox = undefined;\n\n    // viewer.imageryLayers.addImageryProvider(provider);\n    // enabling lighting effects due to sun\n\n    // adding sentinel 2a, meteo 10 and spot 6 satellite realtime visualization\n    viewer.dataSources.removeAll();\n    var dataSrc = Cesium.CzmlDataSource.load(\"sat.czml\");\n    viewer.dataSources.add(dataSrc);\n\n\n    // var editHandler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n    // editHandler.setInputAction(function (e) {\n    //   var shapeEditMenu = document.getElementById(\"toolbar\");\n    //   shapeEditMenu.textContent = 'Testing';\n    //   shapeEditMenu.style.display = \"block\";\n    //   shapeEditMenu.style.left = e.position.x + 'px';\n    //   shapeEditMenu.style.top = e.position.y + 'px';\n    //   shapeEditMenu.style.background = 'rgba(42, 42, 42, 0.8)';\n    //   shapeEditMenu.style.border = '1px solid #888';\n    // }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n\n    // editHandler.setInputAction(function (e) {\n    //   var shapeEditMenu = document.getElementById(\"toolbar\");\n    //   shapeEditMenu.style.display = \"none\";\n    // }, Cesium.ScreenSpaceEventType.LEFT_DOWN);\n\n\n    // adding predicted point\n    // if (prediction) {\n    //   viewer.entities.add({\n    //     position: Cesium.Cartesian3.fromDegrees(parseInt(longitude), parseInt(latitude)),\n    //     point: {\n    //       pixelSize: 30,\n    //       color: Cesium.Color.CRIMSON.withAlpha(0.4),\n    //     },\n    //   });\n    // }\n\n    // populating locust locations on globe\n    var billboards = viewer.scene.primitives.add(new Cesium.BillboardCollection());\n    {\n      locationData.map(coords => {\n        billboards.add({\n          position: Cesium.Cartesian3.fromDegrees(coords.longitude, coords.latitude),\n          image: '/Assets/Images/locust.png'\n        });\n      })\n    }\n\n    // adding position marker\n    var entity = viewer.entities.add({\n      name: \"location\",\n      label: {\n        show: false,\n        showBackground: true,\n        font: \"14px monospace\",\n        style: Cesium.LabelStyle.FILL_AND_OUTLINE,\n        horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n        verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\n        pixelOffset: new Cesium.Cartesian2(0, -9),\n      },\n    });\n\n    // showing position popup on mouse move\n    viewer.canvas.addEventListener('mousemove', function (e) {\n\n      var mousePosition = new Cesium.Cartesian2(e.clientX, e.clientY);\n      var ellipsoid = viewer.scene.globe.ellipsoid;\n      var cartesian = viewer.camera.pickEllipsoid(mousePosition, ellipsoid);\n\n      if (cartesian) {\n        var cartographic = ellipsoid.cartesianToCartographic(cartesian);\n        var longitudeString = Cesium.Math.toDegrees(cartographic.longitude).toFixed(2);\n        var latitudeString = Cesium.Math.toDegrees(cartographic.latitude).toFixed(2);\n\n        entity.position = cartesian;\n        entity.label.show = true;\n        entity.label.text = \"Lon: \" +\n          (\"   \" + longitudeString).slice(-7) +\n          \"\\u00B0\" +\n          \"\\nLat: \" +\n          (\"   \" + latitudeString).slice(-7) +\n          \"\\u00B0\";\n\n      } else {\n        entity.label.show = false;\n      }\n\n    }, false);\n\n    // Visualizing wind on the globe\n    const windOptions = {\n      colorScale: [\n        'rgb(36,104, 180)',\n        'rgb(60,157, 194)',\n        'rgb(128,205,193 )',\n        'rgb(151,218,168 )',\n        'rgb(198,231,181)',\n        'rgb(238,247,217)',\n        'rgb(255,238,159)',\n        'rgb(252,217,125)',\n        'rgb(255,182,100)',\n        'rgb(252,150,75)',\n        'rgb(250,112,52)',\n        'rgb(245,64,32)',\n        'rgb(237,45,28)',\n        'rgb(220,24,32)',\n        'rgb(180,0,35)',\n      ],\n      frameRate: 16,\n      maxAge: 60,\n      globalAlpha: 0.9,\n      velocityScale: 1 / 30,\n      paths: 2000\n    };\n\n    fetch('https://qjvic.github.io/cesium-wind/examples/wind.json')\n      .then(res => res.json())\n      .then(res => {\n        const windLayer = new CesiumWind(res, { windOptions });\n        windLayer.addTo(viewer);\n      });\n  }\n\n  useEffect(async () => {\n    const locationData = await fetchData()\n    // const prediction = await predictedData\n    init(locationData);\n  }, [])\n\n  const prevLat = usePrevious(latitude);\n  const prevLong = usePrevious(longitude);\n  // const prevPredictedData = usePrevious(predictedData);\n\n  const onFormSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(\"Longitude: \" + longitude)\n    console.log(\"Latitude: \" + latitude)\n    let lat = latitude\n    let long = longitude\n\n    if (lat === \"\" && long === \"\") {\n      setPredictedData({ risk: NaN })\n    }\n    else if (prevLat === lat && prevLong === long) {\n      console.log(\"lat and long matched with prev values\")\n    }\n    else {\n      let data = `lat-${lat}-long-${long}`\n      setLoading(true)\n      axios.post(`https://landcoverapi.azurewebsites.net/predict/${data}`)\n        .then(response => {\n          setLoading(false)\n          setDisplayMessage(\"Predicted Probability = \")\n          setPredictedData(response.data)\n          // plotPredictedPoint(longitude, latitude)\n        })\n    }\n  }\n\n  const onResetHandler = (event) => {\n    event.preventDefault();\n    setDisplayMessage(\"\")\n    setLongitude(\"\")\n    setLatitude(\"\")\n    setLoading(false)\n    setPredictedData(null)\n  }\n\n  return (\n    <>\n      <div id=\"cesium\" />\n      <div id=\"toolbar\" />\n      <form id=\"location-form\">\n        <h2>Predicting Probability of Attack</h2>\n        <label htmlFor=\"longitude\">longitude: </label>\n        <input type=\"text\" name=\"long\" value={longitude} onChange={(e) => setLongitude(e.target.value)} />\n        <br />\n        <label htmlFor=\"latitude\">latitude: </label>\n        <input type=\"text\" name=\"lat\" value={latitude} onChange={(e) => setLatitude(e.target.value)} />\n        <br />\n        <button onClick={onFormSubmitHandler}>Predict</button>\n        <button onClick={onResetHandler}>Reset</button>\n        {loading ? <p>Loading...</p> : null}\n        {predictedData ? <p>{displayMessage} {predictedData.risk.toFixed(2)}%</p> : null}\n      </form>\n      <Footer />\n    </>\n  );\n}\n\nexport default Tracking;"]},"metadata":{},"sourceType":"module"}